.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "iTagger::ClusterOTUs 3"
.TH iTagger::ClusterOTUs 3 "2015-03-04" "perl v5.16.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
iTagger::ClusterOTUs
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\s-1OTU\s0 clustering and taxonomic classification, wrapping usearch and \s-1RDP\s0 classifier.  To increase speed and allow processing of larger number of clusters than will fit in \s-1RAM\s0 (particularly for 32bit usearch), alternates between single-threaded clustering and multi-threaded searching. Requires 4\-16 threads.
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.IP "clusterOTUs" 5
.IX Item "clusterOTUs"
This is the only exported function.  Performs iterative clustering, and generates \s-1OTU\s0 Fasta and abundance tables.
.IP "_input" 5
.IX Item "_input"
Combine and depreplicate seq-obs files from multiple libraries, output in \s-1FASTA\s0 format, sorted by decreasing abundance, with 'size=<int>' tag in header as required by \s-1USEARCH\s0.
.IP "_nextSeq" 5
.IX Item "_nextSeq"
Private function returns next sorted seq, used for merging input.
.IP "_size" 5
.IX Item "_size"
Private function returns total size of \f(CW@obs\fR list
.IP "_obsToSparseString" 5
.IX Item "_obsToSparseString"
Given a list of observations (counts), return a string with a sparse array reprentation.
.IP "_initialSplitFasta" 5
.IX Item "_initialSplitFasta"
Private function to create a file of specified size (for clustering) and write the remainder to a second file (for searching).
.IP "_cluster" 5
.IX Item "_cluster"
Given Fasta file of dereplicated sequences (sorted by decreasing abundance), cluster OTUs at specified radius, map the reads to the centroids, calculate \s-1OTU\s0 sizes, and output \s-1OTU\s0 Fasta.  Delete input file.
.IP "_splitFasta" 5
.IX Item "_splitFasta"
Private function to write specified number of seqs to one file and remainder to another.
.IP "_outputOtus" 5
.IX Item "_outputOtus"
Order OTUs by decreasing size and output.  OTUs are renamed, starting with 0.
.IP "_loadOtus" 5
.IX Item "_loadOtus"
Private function to load OTUs from disk into \s-1RAM\s0.  The obs file may contain more records than the Fasta file; only the OTUs in the Fasta file are used.  The Fasta file may contain OTUs out of order.
.IP "_sumOtus" 5
.IX Item "_sumOtus"
Count the total number of sequence per libs in all OTUs.
.IP "_search" 5
.IX Item "_search"
Map unclustered reads files to OTUs, calculate new \s-1OTU\s0 sizes, sort by decreasing abundance, and generate new file to be clustered (with OTUs at top of file), plus second file if number of unclustered sequences exceeds maximum number of seqs per iteration.
.IP "_countChimeraFilteredClustering" 5
.IX Item "_countChimeraFilteredClustering"
Count number of sequences per library that were filtered as chimeric during clustering.
.IP "_searchSinglets" 5
.IX Item "_searchSinglets"
Map unclustered reads files to OTUs, calculate new \s-1OTU\s0 sizes, sort by decreasing abundance, and overwrite \s-1OTU\s0 file.  Deletes singlet files.
.IP "_chimeraFilter" 5
.IX Item "_chimeraFilter"
Filter chimeric sequences by comparison to reference database.
.IP "classify" 5
.IX Item "classify"
Run \s-1RDP\s0 Classifier in multiple threads and generate environmental community table.
.IP "_runRdp" 5
.IX Item "_runRdp"
Run \s-1RDP\s0 Classifier
.IP "_taxFilter" 5
.IX Item "_taxFilter"
Filter \s-1OTU\s0 table by taxonomy
.IP "_run" 5
.IX Item "_run"
Private function to run external executable.
.IP "_set" 5
.IX Item "_set"
Return value from config or default value. If default not defined, it must be defined in the config file, otherwise logconfess.
.IP "_commify" 5
.IX Item "_commify"
Add commas to integers for readability
.SH "LIMITATIONS"
.IX Header "LIMITATIONS"
The clustering is single-threaded, but we have attempted to speed it up by interspersing with multi-threaded mapping steps.  Consequently, the full number of reserved cores are not used at all times, resulting in some waste of resources.
.SH "NOTES"
.IX Header "NOTES"
Special handling of 454 data (i.e. homopolymer-insensitive clustering) was dropped from this version.
.SH "AUTHORS"
.IX Header "AUTHORS"
Edward Kirton and Julien Tremblay.
\&\s-1USEARCH\s0 by Robert Edgar (http://drive5.com)
\&\s-1RDP\s0 Classifier by James R. Cole, Qiong Wang, James M. Tiedje.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2013 \s-1US\s0 \s-1DOE\s0 Joint Genome Institute. Use freely under the same license as Perl itself.  Refer \s-1USEARCH\s0 and \s-1RDP\s0 Classifier documentation for their own copyright and license information.
